<?php
/***************************************************************************/
/***************************************************************************/
/*
/* 	----------------------------------------------------------------------
/* 						DO NOT EDIT THIS FILE
/*	----------------------------------------------------------------------
/* 
/*  			Built by Chris E Rodriguez. http://premiumwd.com
/*  				Copyright (C) 2012 Premiumwd
/*
/***************************************************************************/
/***************************************************************************/

function shortcodes_style()
{
	wp_register_style('shortcodes', get_template_directory_uri() . '/premiumwd-options/shortcodes/shortcodes.css', array (), 'all');
	
	wp_enqueue_style('shortcodes');

}
add_action('wp_enqueue_scripts', 'shortcodes_style');

///////////////////////////////////////
// Enable shortcode in content
///////////////////////////////////////	
add_filter('the_content', 'do_shortcode');

///////////////////////////////////////
// Enable shortcode in excerpt
///////////////////////////////////////
add_filter('the_excerpt', 'do_shortcode');

///////////////////////////////////////	
// Enable shortcode in text widget
///////////////////////////////////////
add_filter('widget_text', 'shortcode_unautop');
add_filter('widget_text', 'do_shortcode', 11);

///////////////////////////////////////	
// Remove the 2 main auto-formatters
///////////////////////////////////////
remove_filter('the_content', 'wpautop');
remove_filter('the_content', 'wptexturize');

///////////////////////////////////////
// Vimeo Shortcode
///////////////////////////////////////	
function vimeo_video($atts, $content = null)
{
	extract(shortcode_atts(array ('id' => '', 'width' => '640', 'height' => '360', 'color' => '59a5d1'), $atts));
	return '<iframe src="http://player.vimeo.com/video/' . $id . '?color=' . $color . '" width="' . $width . '" height="' . $height . '" frameborder="0" webkitAllowFullScreen allowFullScreen></iframe>';
}
add_shortcode('vimeo', 'vimeo_video');

///////////////////////////////////////
// Youtube Shortcode
///////////////////////////////////////	
function youtube_video($atts, $content = null)
{
	extract(shortcode_atts(array ('id' => '', 'width' => '640', 'height' => '360', 'autoplay' => '0'), $atts));
	return '<iframe width="' . $width . '" height="' . $height . '" src="http://www.youtube.com/embed/' . $id . '?autoplay=' . $autoplay . '&rel=0" frameborder="0" allowfullscreen></iframe>';
}
add_shortcode('youtube', 'youtube_video');

///////////////////////////////////////
// News Shortcode
///////////////////////////////////////	
function recent_posts_shortcode($atts)
{
	$q = new WP_Query(array ('orderby' => 'date', 'posts_per_page' => '2'));
	
	$list = '<ul class="recent-news">';
	
	while ($q->have_posts()) :
		$q->the_post();
		
		$list .= '<li class="clearfix"><div class="date"><div class="month">' . get_the_date('d') . '</div><div class="year">' . get_the_date('M') . '</div></div>
	 <div class="post"><h4><a href="' . get_permalink() . '">' . get_the_title() . '</a></h4>' . '
	 <div class="blog-2-details">
        <span><em class="icon-user"></em>By ' . get_the_author() . ' </span>
        <span><em class="icon-comment"></em>' . get_comments_number('No Comments', 'One Comment', '% Comments') . ' Comments</span>
        </div>
	 ' . wp_trim_words(get_the_excerpt(), 25) . '</div></li>';
	
	endwhile;
	
	wp_reset_query();
	
	return $list . '</ul>';

}

add_shortcode('recent_news', 'recent_posts_shortcode');

///////////////////////////////////////
// Posts Shortcode
///////////////////////////////////////	
function my_recent_posts_shortcode($atts)
{
	$base = get_stylesheet_directory_uri();
	wp_register_script('flexslider', $base . '/js/jquery.flexslider.js', array ('jquery'), '1.3', true);
	wp_register_style('flex-slider-css', $base . '/css/flexslider.css', '', 'all');
	wp_enqueue_script('flexslider');
	wp_enqueue_style('flex-slider-css');
	wp_register_script('jcarousel', $base . '/js/jquery.jcarousel.min.js', array ('jquery'), '6.1.0', true);
	wp_enqueue_script('jcarousel');
	
	extract(shortcode_atts(array ('title' => 'Recent Posts', 'limit' => 3, 'load' => 4), $atts));
	$paged = get_query_var('paged') ? get_query_var('paged') : 1;
	$plimit = ($load > $limit) ? $load : (((int)$limit > 5) ? 5 : $limit);
	$limit = (((int)$limit > 5) ? 5 : $limit);
	$width = 204;
	if (get_option('premiumwd_width') == '960px')
		$width = 172;
	if (get_option('premiumwd_width') == '1040px')
		$width = 188;
	if (get_option('premiumwd_width') == '1120px')
		$width = 204;
	
	$args = array ('post_type' => 'post', 'posts_per_page' => $plimit, 'paged' => $paged);
	$carouselPosts = new Wp_Query($args);
	$count = 0;
	
	$list = '
    <script type="text/javascript" src="'. get_template_directory_uri().'/js/jquery.jplayer.min.js"></script>
    <link type="text/css" href="'. get_template_directory_uri().'/css/jplayer.css" rel="stylesheet" />
    <script type="text/javascript">
    $(document).ready(function(){
    $("#jquery_jplayer_1").jPlayer({
    ready: function () {
    $(this).jPlayer("setMedia", {
    mp3: "<?php echo get_post_meta(get_the_ID(),"_format_audio_embed",true); ?>",
    });
    },
    swfPath: "<?php echo get_template_directory_uri(); ?>/swf",
    supplied: "mp3"
    });
    });
    </script>	<script type="text/javascript" src="'. get_template_directory_uri().'/js/mosaic.1.0.1.js"></script>
<link rel="stylesheet" href="'. get_template_directory_uri().'/css/mosaic.css" type="text/css" media="screen" /><!--<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript" charset="utf-8"></script> -->
  <script type="text/javascript">
   function mycarouselInitCallback(carousel) {
    jQuery(".jcarousel-control a").click(function() {
        carousel.scroll(jQuery.jcarousel.intval(jQuery(this).text()));
        return false;
    });

    jQuery(".jcarousel-scroll select").change(function() {
        carousel.options.scroll = jQuery.jcarousel.intval(this.options[this.selectedIndex].value);
        return false;
    });

    jQuery("#post-lists-next").click(function() {
        carousel.next();
        return false;
    });

    jQuery("#post-lists-prev").click(function() {
        carousel.prev();
        return false;
    });
  }
	jQuery(function() {
		jQuery("#post-lists").jcarousel({
      visible: ' . $limit . ',
      scroll: 1,
      animation: 1200,
      initCallback: mycarouselInitCallback,
        // This tells jCarousel NOT to autobuild prev/next buttons
        buttonNextHTML: null,
        buttonPrevHTML: null
    });
    jQuery(".rps .jcarousel-container-horizontal, .rps").css("width", "' . (($limit <= 4) ? (($limit * $width) + (10 * ($limit - 1))) : '100%') . '");
    //jQuery("#recent-navigation");
    jQuery(".rps .jcarousel-clip-horizontal").css("width", "' . (($limit <= 4) ? ((($limit * $width) + (10 * ($limit - 1)))) : '100%') . '");
    jQuery(".gallery-slider").flexslider({
      animation: "fade",
      slideshow: true,
   		directionNav: true,
   		controlNav: true,
   		pauseOnHover: true,
   		slideshowSpeed: 3000, 
   		animationDuration: 600
    });
  });

	</script>
	<script type="text/javascript">  
			jQuery(function($){
				$(".circle").mosaic({
					opacity		:	0.8			//Opacity for overlay (0-1)
				});
		    });
		</script>
<div class="slidewrap rps">
<h2 style="display:inline-block;margin: 5px 0 0 0;">' . $title . '</h2>
    <div class="jcarousel-scroll" id="recent-navigation">
			<div class="right"><a href="#" id="post-lists-next">Next</a></div>
			<div class="left"><a href="#" id="post-lists-prev">Prev</a></div>
		</div>
    <div style="clear:both; display: block;"></div>
		<ul class="jcarousel-skin-tango post-lists" id="post-lists">';
	
	while ($carouselPosts->have_posts())
	{
		$carouselPosts->the_post();
		
		$post_format = get_post_format();
		switch ($post_format)
		{
			
			case 'video' :
				
				$list .= '<li class="slide">' . '<div class="recent-thumbnail">' . get_post_meta(get_the_ID(), '_format_video_embed', true) . '<span style="font-size:16px !important;font-weight:normal">' . '<a href="' . get_permalink() . '">' . get_the_title() . '</a>' . '</span>' . excerpt(15) . '</div>' . '</li>';
				
				break;
			default :
				$list .= '<li class="slide">
        <div class="recent-thumbnail">' . '<div class="mosaic-block circle recent-posts">
		<a class="mosaic-overlay" href="' . get_permalink() . '"></a><div class="mosaic-backdrop ">' . get_the_post_thumbnail($post->ID, 'shortcode-post') . '</div></div><span style="font-size:16px !important;font-weight:normal">' . '<a href="' . get_permalink() . '">' . get_the_title() . '</a>' . '</span>' . '<p>' . excerpt(15) . '</p>' . '</div>' . '</li>';
				
				break;
			case 'quote' :
				$list .= '';
				
				break;
			case 'audio' :
				$list .= '<li class="slide">' . '
		<div class="recent-audio">
		<div id="jquery_jplayer_1" class="jp-jplayer"></div>
        <div id="jp_container_1" class="jp-audio">
        <div class="jp-type-single">
        <div class="jp-gui jp-interface">
        <ul class="jp-controls">
        <li><a href="javascript:;" class="jp-play" tabindex="1"><i class="icon-play"></i></a></li>
        <li><a href="javascript:;" class="jp-pause" tabindex="1"><i class="icon-pause"></i></a></li>
        <li><a href="javascript:;" class="jp-mute" tabindex="1" title="mute"><i class="icon-volume-up"></i></a></li>
        <li><a href="javascript:;" class="jp-unmute" tabindex="1" title="unmute"><i class="icon-volume-off"></i></a></li>
        </ul>
        <div class="jp-progress">
        <div class="jp-seek-bar">
        <div class="jp-play-bar"></div>
        </div>
        </div>
        <div class="jp-volume-bar">
        <div class="jp-volume-bar-value"></div>
        </div>
        <div class="jp-time-holder">
        <div class="jp-current-time"></div>
        </div>
        </div>
      	</div>
        </div><span style="font-size:16px !important;font-weight:normal">' . '<a href="' . get_permalink() . '">' . get_the_title() . '</a>' . '</span>' . excerpt(15) . '</div>' . '</li>';
				
				break;
			case 'image' :
				$list .= '<li class="slide">
        <div class="recent-thumbnail">' . '<div class="mosaic-block circle recent-posts">
		<a class="mosaic-overlay" href="' . get_permalink() . '"></a><div class="mosaic-backdrop ">' . get_the_post_thumbnail($post->ID, 'shortcode-post') . '</div></div>' . '<p>' . excerpt(15) . '</p>' . '</div>' . '</li>';
				
				break;
			case 'link' :
				$list .= '';
				
				break;
			case 'aside' :
				$list .= '';
				
				break;
			case 'gallery' :
				$image_url = gallery_first_image();
				
				$list .= '<li>
<div class="gallery-slider"><ul class="slides">';
				
				if ($image_url)
				{
					
					foreach ($image_url as $i)
					{
						$list .= '<li>' . '<a href="' . get_permalink() . '">';
						$list .= '<img height="150" width="203" src="' . $i . '" alt="' . get_the_title() . '" />';
						$list .= '</a>' . '</li>';
					}
					
					$list .= '</ul></div>' . '<span style="font-size:16px !important;font-weight:normal">' . '<a href="' . get_permalink() . '">' . get_the_title() . '</a>' . '</span>' . excerpt(15) . '</li>';
				}
				break;
		}
		wp_reset_query();
	
	}
	
	return $list . '</ul></div><script>jQuery(function() {jQuery(".slides li").css("display", "none"); });</script>';

}
add_shortcode('recent_posts', 'my_recent_posts_shortcode');

///////////////////////////////////////
// Project Shortcode
///////////////////////////////////////	
function my_project_posts_shortcode($atts)
{
	
	$base = get_stylesheet_directory_uri();
	wp_register_script('jcarousel', $base . '/js/jquery.jcarousel.min.js', array ('jquery'), '6.1.0', true);
	wp_register_style('jskin', $base . '/skins/tango/skin.css', '', 'all');
	wp_enqueue_script('jcarousel');
	wp_enqueue_style('jskin');
	
	extract(shortcode_atts(array ('title' => 'Recent Projects', 'limit' => 3, 'load' => 4), $atts));
	
	$paged = get_query_var('paged') ? get_query_var('paged') : 1;
	$plimit = ($load > $limit) ? $load : (((int)$limit > 5) ? 5 : $limit);
	$limit = (((int)$limit > 5) ? 5 : $limit);
	$args = array ('post_type' => 'project', 'posts_per_page' => $plimit, 'paged' => $paged);
	$width = 204;
	if (get_option('premiumwd_width') == '960px')
		$width = 172;
	if (get_option('premiumwd_width') == '1040px')
		$width = 188;
	if (get_option('premiumwd_width') == '1120px')
		$width = 204;
	$carouselPosts = new Wp_Query($args);
	$count = 0;
	$terms = get_the_terms($post->ID, 'tagportfolio');
	if ($terms && !is_wp_error($terms))
	:
		$links = array ();
		foreach ($terms as $term)
		{
			$links[] = $term->name;
		}
		$links = str_replace(' ', '-', $links);
		$tax = join(" ", $links);
	
	else
	:
		$tax = '';
	endif;
	
	$list = '<script type="text/javascript">
  function mycarousel_initCallbackp(carousel) {
    jQuery(".jcarousel-control a").bind("click", function() {
        carousel.scroll(jQuery.jcarousel.intval(jQuery(this).text()));
        return false;
    });

    jQuery(".jcarousel-scroll select").bind("change", function() {
        carousel.options.scroll = jQuery.jcarousel.intval(this.options[this.selectedIndex].value);
        return false;
    });

    jQuery("#recent-project-next").click(function() {
        carousel.next();
        return false;
    });

    jQuery("#recent-project-prev").click(function() {
        carousel.prev();
        return false;
    });
  }
	jQuery(function() {
		jQuery("#recent-project").jcarousel({
     visible: ' . $limit . ',
      scroll: 1,
      animation: 1200,
      initCallback: mycarousel_initCallbackp,
        // This tells jCarousel NOT to autobuild prev/next buttons
        buttonNextHTML: null,
        buttonPrevHTML: null
    });
    jQuery(".rp .jcarousel-container-horizontal, .rp").css("width", "' . (($limit <= 4) ? (($limit * $width) + (10 * ($limit - 1))) : '100%') . '");
    //jQuery("#recent-navigation");
    jQuery(".rp .jcarousel-clip-horizontal").css("width", "' . (($limit <= 4) ? (($limit * $width) + (10 * ($limit - 1))) : '100%') . '");
	});
	</script>
  <div class="slidewrap rp"> 
  <h2 style="display:inline-block;margin:5px 0 0 0;">' . $title . '</h2>
     <div class="jcarousel-scroll" id="recent-navigation">
			<div class="right"><a href="#" id="recent-project-next">Next</a></div>
			<div class="left"><a href="#" id="recent-project-prev">Prev</a></div>
		</div> 
  <ul class="jcarousel-skin-tango project-item" id="recent-project">';
	
	while ($carouselPosts->have_posts())
	{
		$carouselPosts->the_post();
		
		$list .= '<li>' . '<a href="' . get_permalink() . '">' . get_the_post_thumbnail($post->ID, 'shortcode-project') . '<div class="overlay">' . '<h5>' . get_the_title() . '</h5>' . '<p>' . get_post_meta(get_the_id(), 'sub-heading', true) . '</p>' . '</div>' . '</a>' . '</li>';
	}
	
	wp_reset_query();
	
	return $list . '</ul></div>';
}

add_shortcode('recent_projects', 'my_project_posts_shortcode');

///////////////////////////////////////
// Drop Cap Shortcode
///////////////////////////////////////	
function dropcap($atts, $content = null)
{
	return '
	<div class="dropcap">' . $content . '</div>
	';
}
add_shortcode('dropcap', 'dropcap');

///////////////////////////////////////
// Buttons Shortcode
///////////////////////////////////////	
function button_shortcode($atts, $content = null)
{
	extract(shortcode_atts(array ('link' => '', 'bgcolor' => '', 'textcolor' => '', 'target' => '_blank', 'color' => '', 'size' => '', 'align' => ''), $atts));
	
	$out = '<a style="float:' . $align . '; background-color:' . $bgcolor . ';" class="button ' . $color . ' ' . $size . '  " href="' . $link . '" target="' . $target . '" ><span style="color:' . $textcolor . '">' . do_shortcode($content) . '</span></a>';
	
	return $out;
}
add_shortcode('button', 'button_shortcode');

///////////////////////////////////////
// Columns Shortcode
///////////////////////////////////////	
function column_one_full($atts, $content = null)
{
	return '<div class="full_column">' . do_shortcode($content) . '</div>';
}
add_shortcode('one_column', 'column_one_full');

function column_one_third($atts, $content = null)
{
	return '<div class="one_third">' . do_shortcode($content) . '</div>';
}
add_shortcode('one_third', 'column_one_third');

function column_one_third_last($atts, $content = null)
{
	return '<div class="one_third last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('one_third_last', 'column_one_third_last');

function column_two_third($atts, $content = null)
{
	return '<div class="two_third">' . do_shortcode($content) . '</div>';
}
add_shortcode('two_third', 'column_two_third');

function column_two_third_last($atts, $content = null)
{
	return '<div class="two_third last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('two_third_last', 'column_two_third_last');

function column_one_half($atts, $content = null)
{
	return '<div class="one_half">' . do_shortcode($content) . '</div>';
}
add_shortcode('one_half', 'column_one_half');

function column_one_half_last($atts, $content = null)
{
	return '<div class="one_half last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('one_half_last', 'column_one_half_last');

function column_one_fourth($atts, $content = null)
{
	return '<div class="one_fourth">' . do_shortcode($content) . '</div>';
}
add_shortcode('one_fourth', 'column_one_fourth');

function column_one_fourth_last($atts, $content = null)
{
	return '<div class="one_fourth last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('one_fourth_last', 'column_one_fourth_last');

function column_three_fourth($atts, $content = null)
{
	return '<div class="three_fourth">' . do_shortcode($content) . '</div>';
}
add_shortcode('three_fourth', 'column_three_fourth');

function column_three_fourth_last($atts, $content = null)
{
	return '<div class="three_fourth last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('three_fourth_last', 'column_three_fourth_last');

function column_one_fifth($atts, $content = null)
{
	return '<div class="one_fifth">' . do_shortcode($content) . '</div>';
}
add_shortcode('one_fifth', 'column_one_fifth');

function column_one_fifth_last($atts, $content = null)
{
	return '<div class="one_fifth last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('one_fifth_last', 'column_one_fifth_last');

function column_two_fifth($atts, $content = null)
{
	return '<div class="two_fifth">' . do_shortcode($content) . '</div>';
}
add_shortcode('two_fifth', 'column_two_fifth');

function column_two_fifth_last($atts, $content = null)
{
	return '<div class="two_fifth last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('two_fifth_last', 'column_two_fifth_last');

function column_three_fifth($atts, $content = null)
{
	return '<div class="three_fifth">' . do_shortcode($content) . '</div>';
}
add_shortcode('three_fifth', 'column_three_fifth');

function column_three_fifth_last($atts, $content = null)
{
	return '<div class="three_fifth last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('three_fifth_last', 'column_three_fifth_last');

function column_four_fifth($atts, $content = null)
{
	return '<div class="four_fifth">' . do_shortcode($content) . '</div>';
}
add_shortcode('four_fifth', 'column_four_fifth');

function column_four_fifth_last($atts, $content = null)
{
	return '<div class="four_fifth last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('four_fifth_last', 'column_four_fifth_last');

function column_one_sixth($atts, $content = null)
{
	return '<div class="one_sixth">' . do_shortcode($content) . '</div>';
}
add_shortcode('one_sixth', 'column_one_sixth');

function column_one_sixth_last($atts, $content = null)
{
	return '<div class="one_sixth last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('one_sixth_last', 'column_one_sixth_last');

function column_five_sixth($atts, $content = null)
{
	return '<div class="five_sixth">' . do_shortcode($content) . '</div>';
}
add_shortcode('five_sixth', 'column_five_sixth');

function column_five_sixth_last($atts, $content = null)
{
	return '<div class="five_sixth last">' . do_shortcode($content) . '</div><div class="clearboth"></div>';
}
add_shortcode('five_sixth_last', 'column_five_sixth_last');

///////////////////////////////////////
// Highlight Shortcode
///////////////////////////////////////	
function shortcode_highlight($atts, $content = null)
{
	extract(shortcode_atts(array ('color' => 'yellow', 'font' => '#000000'), $atts));
	return "<FONT style=\"BACKGROUND-COLOR: $color; color: $font\">$content</font>";
}
add_shortcode('highlight', 'shortcode_highlight');

///////////////////////////////////////
// Blockquote Shortcode
///////////////////////////////////////		
function block_quote($atts, $content = null)
{
	extract(shortcode_atts(array ('textcolor' => '#000000', 'bgcolor' => '#fefef1', 'bordercolor' => '#e5e5e5', 'border' => '0px', 'bordertype' => 'solid', 'margin' => '', 'from' => '', 'float' => ''), $atts));
	$byline = "<p align=\"right\"><em> $from </em></p>";
	return "<div style=\" background-color:$bgcolor; margin: $margin; float: $float; color: $textcolor; border: $border solid $bordercolor; font-size: 1em; width:220px; font-style: italic; padding: 10px 20px 0px 10px;\">$content<br><br><p align=\"right\"><em>~ $from</em></p></div>";
}
add_shortcode('blockquote', 'block_quote');

///////////////////////////////////////
// Pullquote Shortcode
///////////////////////////////////////		
function pullquote($atts, $content = null)
{
	extract(shortcode_atts(array ('float' => '$align'), $atts));
	return '<blockquote class="pullquote" style="float: ' . $float . ';">' . $content . '</blockquote>';
}
add_shortcode('pull', 'pullquote');

function pullquote2($atts, $content = null)
{
	extract(shortcode_atts(array ('float' => '$align'), $atts));
	return '<blockquote class="pullquote2" style="float: ' . $float . ';">' . $content . '</blockquote>';
}
add_shortcode('pull_2', 'pullquote2');

///////////////////////////////////////
// List Shortcode
///////////////////////////////////////	
function my_checklist($atts, $content = null)
{
	return '<div class="checklist">' . $content . '</div>';
}
add_shortcode('checklist', 'my_checklist');

function my_crosslist($atts, $content = null)
{
	return '<div class="crosslist">' . $content . '</div>';
}
add_shortcode('crosslist', 'my_crosslist');

function my_squarelist($atts, $content = null)
{
	return '<div class="squarelist">' . $content . '</div>';
}
add_shortcode('squarelist', 'my_squarelist');

function my_circlelist($atts, $content = null)
{
	return '<div class="circlelist">' . $content . '</div>';
}
add_shortcode('circlelist', 'my_circlelist');

function my_arrowleftlist($atts, $content = null)
{
	return '<div class="arrowleftlist">' . $content . '</div>';
}
add_shortcode('arrowleftlist', 'my_arrowleftlist');

function my_arrowleft2list($atts, $content = null)
{
	return '<div class="arrowleft2list">' . $content . '</div>';
}
add_shortcode('arrowleft2list', 'my_arrowleft2list');

///////////////////////////////////////
// Alert Box Shortcode
///////////////////////////////////////	
function alertbox($atts, $content = null, $code = "")
{
	$return = '<div class="alert yellow">';
	$return .= $content;
	$return .= '</div>';
	return $return;
}
add_shortcode('alert', 'alertbox');

///////////////////////////////////////
// News Box Shortcode
///////////////////////////////////////	
function newsbox($atts, $content = null, $code = "")
{
	$return = '<div class="alert grey">';
	$return .= $content;
	$return .= '</div>';
	return $return;
}
add_shortcode('news', 'newsbox');

///////////////////////////////////////
// Info Box Shortcode
///////////////////////////////////////	
function infobox($atts, $content = null, $code = "")
{
	$return = '<div class="alert blue">';
	$return .= $content;
	$return .= '</div>';
	return $return;
}
add_shortcode('info', 'infobox');

///////////////////////////////////////
// Warning Box Shortcode
///////////////////////////////////////	
function warningbox($atts, $content = null, $code = "")
{
	$return = '<div class="alert red">';
	$return .= $content;
	$return .= '</div>';
	return $return;
}
add_shortcode('warning', 'warningbox');

///////////////////////////////////////
// Download Box Shortcode
///////////////////////////////////////	
function successbox($atts, $content = null, $code = "")
{
	$return = '<div class="alert green">';
	$return .= $content;
	$return .= '</div>';
	return $return;
}
add_shortcode('success', 'successbox');

///////////////////////////////////////
// Icon Shortcode
///////////////////////////////////////	
function icon($atts, $content = null)
{
	extract(shortcode_atts(array ('type' => '$type', 'color' => '$color'), $atts));
	return '<em class="' . $type . ' ' . $color . '"></em>' . $content . '';
}
add_shortcode('icons', 'icon');

///////////////////////////////////////
// Icon Box Shortcode
///////////////////////////////////////	
function icon_box($atts, $content = null)
{
	extract(shortcode_atts(array ('color' => '$color', 'type' => '$type', 'feature' => '$feature', 'icon' => '$icon'), $atts));
	return '<div class="feature"><div class="' . $feature . '" style="background-color:' . $color . ';"><i class="' . $type . ' ' . $icon . '"></i></div><div class="feature-description">' . $content . '</div></div>';
}
add_shortcode('icon_box', 'icon_box');

///////////////////////////////////////
// Google Maps Shortcode
///////////////////////////////////////	
add_action('wp_head', 'gmaps_header');

function gmaps_header()
{
	?>
<script type="text/javascript"
	src="http://maps.google.com/maps/api/js?sensor=false"></script>
<style type="text/css">
.entry-content img {
	max-width: 100000%; /* override */
}
</style>
<?php
}

function mapme($attr)
{
	
	// default atts
	$attr = shortcode_atts(array ('lat' => '0', 'lon' => '0', 'id' => 'map', 'z' => '1', 'w' => '400', 'h' => '300', 'maptype' => 'ROADMAP', 'address' => '', 'kml' => '', 'kmlautofit' => 'yes', 'marker' => '', 'markerimage' => '', 'traffic' => 'no', 'bike' => 'no', 'fusion' => '', 'start' => '', 'end' => '', 'infowindow' => '', 'infowindowdefault' => 'yes', 'directions' => '', 'hidecontrols' => 'false', 'scale' => 'false', 'scrollwheel' => 'true')

	, $attr);
	
	$returnme = '
    <div id="' . $attr['id'] . '" style="width:' . $attr['w'] . 'px;height:' . $attr['h'] . 'px;"></div>
	';
	
	//directions panel
	if ($attr['start'] != '' && $attr['end'] != '')
	{
		$panelwidth = $attr['w'] - 20;
		$returnme .= '
		<div id="directionsPanel" style="width:' . $panelwidth . 'px;height:' . $attr['h'] . 'px;border:1px solid gray;padding:10px;overflow:auto;"></div><br>
		';
	}
	
	$returnme .= '
    

    <script type="text/javascript">

		var latlng = new google.maps.LatLng(' . $attr['lat'] . ', ' . $attr['lon'] . ');
		var myOptions = {
			zoom: ' . $attr['z'] . ',
			center: latlng,
			scrollwheel: ' . $attr['scrollwheel'] . ',
			scaleControl: ' . $attr['scale'] . ',
			disableDefaultUI: ' . $attr['hidecontrols'] . ',
			mapTypeId: google.maps.MapTypeId.' . $attr['maptype'] . '
		};
		var ' . $attr['id'] . ' = new google.maps.Map(document.getElementById("' . $attr['id'] . '"),
		myOptions);
		';
	
	//kml
	if ($attr['kml'] != '')
	{
		if ($attr['kmlautofit'] == 'no')
		{
			$returnme .= '
				var kmlLayerOptions = {preserveViewport:true};
				';
		}
		else
		{
			$returnme .= '
				var kmlLayerOptions = {preserveViewport:false};
				';
		}
		$returnme .= '
			var kmllayer = new google.maps.KmlLayer(\'' . html_entity_decode($attr['kml']) . '\',kmlLayerOptions);
			kmllayer.setMap(' . $attr['id'] . ');
			';
	}
	
	//directions
	if ($attr['start'] != '' && $attr['end'] != '')
	{
		$returnme .= '
			var directionDisplay;
			var directionsService = new google.maps.DirectionsService();
		    directionsDisplay = new google.maps.DirectionsRenderer();
		    directionsDisplay.setMap(' . $attr['id'] . ');
    		directionsDisplay.setPanel(document.getElementById("directionsPanel"));

				var start = \'' . $attr['start'] . '\';
				var end = \'' . $attr['end'] . '\';
				var request = {
					origin:start, 
					destination:end,
					travelMode: google.maps.DirectionsTravelMode.DRIVING
				};
				directionsService.route(request, function(response, status) {
					if (status == google.maps.DirectionsStatus.OK) {
						directionsDisplay.setDirections(response);
					}
				});


			';
	}
	
	//traffic
	if ($attr['traffic'] == 'yes')
	{
		$returnme .= '
			var trafficLayer = new google.maps.TrafficLayer();
			trafficLayer.setMap(' . $attr['id'] . ');
			';
	}
	
	//bike
	if ($attr['bike'] == 'yes')
	{
		$returnme .= '			
			var bikeLayer = new google.maps.BicyclingLayer();
			bikeLayer.setMap(' . $attr['id'] . ');
			';
	}
	
	//fusion tables
	if ($attr['fusion'] != '')
	{
		$returnme .= '			
			var fusionLayer = new google.maps.FusionTablesLayer(' . $attr['fusion'] . ');
			fusionLayer.setMap(' . $attr['id'] . ');
			';
	}
	
	//address
	if ($attr['address'] != '')
	{
		$returnme .= '
		    var geocoder_' . $attr['id'] . ' = new google.maps.Geocoder();
			var address = \'' . $attr['address'] . '\';
			geocoder_' . $attr['id'] . '.geocode( { \'address\': address}, function(results, status) {
				if (status == google.maps.GeocoderStatus.OK) {
					' . $attr['id'] . '.setCenter(results[0].geometry.location);
					';
		
		if ($attr['marker'] != '')
		{
			//add custom image
			if ($attr['markerimage'] != '')
			{
				$returnme .= 'var image = "' . $attr['markerimage'] . '";';
			}
			$returnme .= '
						var marker = new google.maps.Marker({
							map: ' . $attr['id'] . ', 
							';
			if ($attr['markerimage'] != '')
			{
				$returnme .= 'icon: image,';
			}
			$returnme .= '
							position: ' . $attr['id'] . '.getCenter()
						});
						';
			
			//infowindow
			if ($attr['infowindow'] != '')
			{
				//first convert and decode html chars
				$thiscontent = htmlspecialchars_decode($attr['infowindow']);
				$returnme .= '
							var contentString = \'' . $thiscontent . '\';
							var infowindow = new google.maps.InfoWindow({
								content: contentString
							});
										
							google.maps.event.addListener(marker, \'click\', function() {
							  infowindow.open(' . $attr['id'] . ',marker);
							});
							';
				
				//infowindow default
				if ($attr['infowindowdefault'] == 'yes')
				{
					$returnme .= '
									infowindow.open(' . $attr['id'] . ',marker);
								';
				}
			}
		}
		$returnme .= '
				} else {
				alert("Geocode was not successful for the following reason: " + status);
			}
			});
			';
	}
	
	//marker: show if address is not specified
	if ($attr['marker'] != '' && $attr['address'] == '')
	{
		//add custom image
		if ($attr['markerimage'] != '')
		{
			$returnme .= 'var image = "' . $attr['markerimage'] . '";';
		}
		
		$returnme .= '
				var marker = new google.maps.Marker({
				map: ' . $attr['id'] . ', 
				';
		if ($attr['markerimage'] != '')
		{
			$returnme .= 'icon: image,';
		}
		$returnme .= '
				position: ' . $attr['id'] . '.getCenter()
			});
			';
		
		//infowindow
		if ($attr['infowindow'] != '')
		{
			$returnme .= '
				var contentString = \'' . $attr['infowindow'] . '\';
				var infowindow = new google.maps.InfoWindow({
					content: contentString
				});
							
				google.maps.event.addListener(marker, \'click\', function() {
				  infowindow.open(' . $attr['id'] . ',marker);
				});
				';
			//infowindow default
			if ($attr['infowindowdefault'] == 'yes')
			{
				$returnme .= '
						infowindow.open(' . $attr['id'] . ',marker);
					';
			}
		}
	}
	
	$returnme .= '</script>';
	
	return $returnme;
	?>
		
	
		<?php
}
add_shortcode('map', 'mapme');

///////////////////////////////////////
// Accordions Shortcode
///////////////////////////////////////	
function accordions_shortcode($atts, $content = null)
{
	$base = get_stylesheet_directory_uri();
	wp_enqueue_script('accordions-shortcode', $base . '/premiumwd-options/js/shortcodes.js', array ('jquery'), '1.0', true);
	
	$defaults = apply_filters('accordions_shortcode_args', array ('type' => 'vertical', 'load' => '1', 'css' => ''));
	extract(shortcode_atts($defaults, $atts));
	
	if ($load == "none")
		$load = 0; // for backwards compatibility
	

	if ($css != '')
	{
		$css = ' ' . $css;
	}
	
	return '<div id="accordion" class="accordions accordions-' . $type . ' accordions-' . $load . $css . '">' . do_shortcode($content) . '</div>';
}
add_shortcode('accordions', 'accordions_shortcode', 90);

///////////////////////////////////////
// Accordion Shortcode
///////////////////////////////////////	
function accordion_shortcode($atts, $content = null)
{
	
	$defaults = apply_filters('accordion_shortcode_args', array ('title' => '', 'last' => ''));
	extract(shortcode_atts($defaults, $atts));
	
	if ($last != '')
	{
		$last = ' accordion-last';
	}
	
	$return = '<h3><div class="accordion-title accordion-' . sanitize_title($title) . $last . '">' . $title . '<div class="arrows"></div></div></h3>';
	$return .= '<div class="accordion-content' . $last . '">' . $content . '</div>';
	
	return $return;
}
add_shortcode('accordion', 'accordion_shortcode', 99);

///////////////////////////////////////
// Tabs Shortcode
///////////////////////////////////////	
function tabs_shortcode($atts, $content = null)
{
	$base = get_stylesheet_directory_uri();
	wp_enqueue_script('tabs-shortcode', $base . '/premiumwd-options/js/shortcodes.js', array ('jquery'), true);
	
	$defaults = apply_filters('tabs_shortcode_args', array ('style' => 'horizontal', 'id' => 'name', 'css' => ''));
	extract(shortcode_atts($defaults, $atts));
	
	if ($css != '')
	{
		$css = ' ' . $css;
	}
	
	$GLOBALS['tab_count'] = 0;
	$tabid = 0;
	
	do_shortcode($content);
	
	if (is_array($GLOBALS['tabs']))
	{
		foreach ($GLOBALS['tabs'] as $tab)
		{
			
			// set up tabid based on the id defined above
			switch ($id)
			{
				case "name" :
					$tabid = sanitize_title($tab['title']);
					break;
				case "number" :
					$tabid += 1;
					break;
				default :
					break;
			}
			
			$tabs[] = '<li class="tab tab-' . sanitize_title($tab['title']) . '"><a class="" href="#tab' . $tabid . '">' . $tab['title'] . '</a></li>';
			$panes[] = '<div id="tab' . $tabid . '" class="pane pane-' . sanitize_title($tab['title']) . '">' . $tab['content'] . '</div>';
		}
		$return = "\n" . '<div class="tabs-' . $style . $css . '"><ul class="tabs">' . implode("\n", $tabs) . '</ul>' . "\n" . '<div class="panes">' . implode("\n", $panes) . '</div></div>' . "\n";
	}
	/** Reset the variables in the event we use multiple tabs on single page*/
	$GLOBALS['tabs'] = '';
	$GLOBALS['tab_count'] = 0;
	
	return $return;
}
add_shortcode('tabs', 'tabs_shortcode', 90);

///////////////////////////////////////
// Tab Shortcode
///////////////////////////////////////	
function tab_shortcode($atts, $content = null)
{
	$defaults = apply_filters('tab_shortcode_args', array ('title' => 'Tab'));
	extract(shortcode_atts($defaults, $atts));
	
	$x = $GLOBALS['tab_count'];
	$GLOBALS['tabs'][$x] = array ('title' => sprintf($title, $GLOBALS['tab_count']), 'content' => $content);
	
	$GLOBALS['tab_count']++;
}
add_shortcode('tab', 'tab_shortcode', 99);

///////////////////////////////////////
// Tabs Vertical Shortcode
///////////////////////////////////////	
function gw_tabs_vertical($atts, $content = null, $code)
{
	extract(shortcode_atts(array ('style' => false, 'history' => false), $atts));
	
	if (!preg_match_all("/(.?)\[(tab)\b(.*?)(?:(\/))?\](?:(.+?)\[\/tab\])?(.?)/s", $content, $matches))
	{
		return do_shortcode($content);
	}
	else
	{
		for ($i = 0; $i < count($matches[0]); $i++)
		{
			$matches[3][$i] = shortcode_parse_atts($matches[3][$i]);
		}
		
		$output = '<div class="cv-tabs-nav">';
		
		for ($i = 0; $i < count($matches[0]); $i++)
		{
			if ($history == 'true')
			{
				$href = '#' . str_replace(" ", "_", trim($matches[3][$i]['title']));
			}
			else
			{
				$href = '#cv-tab-' . $i;
			}
			$output .= '<span><a href="' . $href . '">' . $matches[3][$i]['title'] . '</a></span>';
		}
		$output .= '</div>';
		$output .= '<div class="cv-tabs-panes">';
		for ($i = 0; $i < count($matches[0]); $i++)
		{
			$output .= '<div class="cv-tabs-pane" id="cv-tab-' . $i . '">' . do_shortcode(trim($matches[5][$i])) . '</div>';
		}
		$output .= '</div>';
		
		if ($history == 'true')
		{
			$data_history = ' data-history="true"';
		}
		else
		{
			$data_history = '';
		}
		
		return '<div class="tabs-wrapper"' . $data_history . '>' . $output . '</div>';
	}
}
add_shortcode('tabs_vertical', 'gw_tabs_vertical');

///////////////////////////////////////
// Toggle Shortcode
///////////////////////////////////////	
function toggle_shortcode($atts, $content = null)
{
	$base = get_stylesheet_directory_uri();
	wp_enqueue_script('toggle-shortcode', $base . '/premiumwd-options/js/shortcodes.js', array ('jquery'), true);
	
	$defaults = apply_filters('toggle_shortcode_args', array ('title' => '', 'css' => ''));
	extract(shortcode_atts($defaults, $atts));
	
	$return = '<div class="toggle-wrap"><div class="toggle-title">' . $title . '<div class="arrow"></div>' . '</div><div class="toggle-content">' . $content . '</div></div>';
	$css_start = '<div class="' . $css . '">';
	$css_end = '</div>';
	
	if ($css)
		$return = $css_start . $return . $css_end;
	
	return $return;
}
add_shortcode('toggle', 'toggle_shortcode');

///////////////////////////////////////
// Pricing Table Shortcode
///////////////////////////////////////	
function pricing_table($atts, $content = null, $code)
{
	if (is_null($content))
		return;
	
	preg_match_all('/\[price\b([^\]]*)\]((?:(?!\[\/price\]).)+)\[\/price\]/s', $content, $matches);
	
	$sub_atts = $matches[1];
	$sub_contents = $matches[2];
	
	$price_count = sizeof($sub_atts);
	
	ob_start();
	?>
<div class="pricing col-<?php
	echo $price_count?> clearfix">
        <?php
	for ($i = 0; $i < $price_count; $i++)
	:
		?>
            <?php
		$sub_atts[$i] = shortcode_parse_atts($sub_atts[$i]);
		?>
            <div
	class="price <?php
		if ($sub_atts[$i]['featured'] == 'true')
			echo 'featured'?>">
<h2><?php
		echo $sub_atts[$i]['title']?></h2>
<h3><?php
		echo $sub_atts[$i]['amount']?></h3>
<div class="description"><?php
		echo $sub_contents[$i]?></div>
<a href="<?php
		echo $sub_atts[$i]['button_link']?>"
	title="<?php
		echo $sub_atts[$i]['button_text']?>" class="button"><?php
		echo $sub_atts[$i]['button_text']?></a>
</div>
        <?php
	endfor
	?>
    </div>
<?php
	return ob_get_clean();
}
add_shortcode('pricing', 'pricing_table');

///////////////////////////////////////
// Slider Shortcode
///////////////////////////////////////	
add_shortcode('jquery_slider', 'jquery_slider_handler');
function jquery_slider_handler($atts, $content = null)
{
	
	$base = get_stylesheet_directory_uri();
	wp_enqueue_script('flex-slider', $base . '/js/jquery.flexslider.js', array ('jquery'), '2.1', true);
	wp_enqueue_style('flex-css', $base . '/css/flexslider.css', '', 'all');
	
	$output = '
		<script type="text/javascript">
		  jQuery(document).ready(function() {
		  jQuery(".flexslider").flexslider({
            animation: "slide",
            animationLoop: false,
            slideshowSpeed: 7000,      
            animationSpeed: 600,
            controlNav: true,
			touch: true,            
			video: true
  		  });
		});
		</script>';
	$output .= '<div class="flexslider"><ul class="slides">';
	$output .= do_shortcode($content);
	$output .= '</ul></div>';
	return $output;
}

add_shortcode('image', 'nivo_image_shortcode');
function nivo_image_shortcode($atts, $content = null)
{
	extract(shortcode_atts(array ('title' => '', 'height' => '', 'type' => ''), $atts));
	if ($type=='video')
	{
		$html .= '<li><iframe height="'.$height.'" width="100%" src="' . $content . ' ></iframe></li>';
	}
	
	else { $html .= '<li><img height="'.$height.'" src="' . $content . '"  data-thumb="' . $content . '" title="' . $atts['title'] . '" alt="' . $atts['title'] . '" /></li>';
	}
	return $html;
}

///////////////////////////////////////
// Tool Tip Shortcode
///////////////////////////////////////	
function tool_tip_handler($atts, $content = null)
{
	$base = get_stylesheet_directory_uri();
	wp_enqueue_script('tool-tip', $base . '/premiumwd-options/js/ez-tooltip.js', array ('jquery'), null, true);
	
	$defaults = apply_filters('toggle_shortcode_args', array ('url' => '', 'title' => '', 'color' => ''));
	extract(shortcode_atts($defaults, $atts));
	
	$html .= '<a class="tooltip ' . $atts['color'] . '" href="' . $atts['url'] . '" title="' . $atts['title'] . '">';
	$html .= $content;
	$html .= '</a>';
	
	return $html;
}
add_shortcode('tool_tip', 'tool_tip_handler');

///////////////////////////////////////
// Lightbox Shortcode
///////////////////////////////////////	
add_shortcode('lightbox', 'lightbox_handler');
function lightbox_handler($atts)
{
	$base = get_stylesheet_directory_uri();
	wp_enqueue_script('jquery-mousewheel', $base . '/js/jquery.mousewheel-3.0.4.pack.js', array ('jquery'), null, true);
	wp_enqueue_script('jquery-fancybox', $base . '/js/jquery.fancybox-1.3.4.js', array ('jquery'), '1.3.4', true);
	wp_enqueue_script('jquery-lightbox', $base . '/js/lightbox.js', array ('jquery'), '1.0', true);
	wp_enqueue_style('jquery-fancybox', $base . '/css/jquery.fancybox-1.3.4.css', '1.3.4', true);
	
	$defaults = apply_filters('toggle_shortcode_args', array ('title' => '', 'id' => '', 'rel' => '', 'url' => '', 'height' => '150px', 'width' => '170px'));
	
	extract(shortcode_atts($defaults, $atts));
	if (empty($rel))
	{
		$html .= '<a class="thumb" id="' . $id . '" href="' . $url . '" title="' . $title . '"><img height="' . $height . '" width="' . $width . '" src="' . $url . '" alt="" />';
	}
	else
	{
		$html .= '<a class="thumb" id="' . $id . '" rel="' . $rel . '" href="' . $url . '" title="' . $title . '"><img height="' . $height . '" width="' . $width . '" src="' . $url . '" alt="" />';
	}
	$html .= '</a>';
	
	return $html;
}

///////////////////////////////////////
// Call to Action Shortcode
///////////////////////////////////////


function call_to_action($atts)
{
	$defaults = apply_filters('toggle_shortcode_args', array ('title' => '', 'subtitle' => '', 'button' => '', 'url' => '', 'type' => '', 'color' => ''));
	extract(shortcode_atts($defaults, $atts));
	if ($type == '1')
	{
		$html .= '<div style="margin-bottom:40px; box-shadow: 1px 1px 3px 0 rgba(180, 180, 180, 0.2);border: 1px solid #ccc; background-color: #f6f6f6; border-radius: 6px; padding: 10px 10px 10px 15px;">
	<div style="clear: both; overflow: hidden;"><span style="color: #555555; font-size: 22px; line-height: 28px;">' . $title . '</span>
	<br/>
	<span style="font-size: 18px; color: #a1a1a1;">' . $subtitle . '</span>
	<div style="float: right; margin-top: -28px;margin-left:-2px;"><a style="float:right;" class="button ' . $color . ' large" href="' . $url . '" target="' . $url . '" ><span style="color:white">' . $button . '</span></a></div>
	</div>
	</div>';
	}
	if ($type == '2')
	{
		$html .= '<div style="margin-bottom:20px; box-shadow: 1px 1px 3px 0 rgba(180, 180, 180, 0.2);border: 1px solid #dedede; background-color: #fcfcfc; border-radius: 6px; padding: 20px 20px 25px 20px;">
	<div style="width:100%"><span style="display:block;color: #555555; font-size: 22px; line-height: 28px;">' . $title . '</span>
	<span style="display:block;margin: 20px 0px; font-size: 12px; color: #000; width:100%;">' . $subtitle . '</span>
	<div style="display:block;"><a class="button ' . $color . ' small" href="' . $url . '" target="' . $url . '" ><span style="color:white">' . $button . '</span></a></div>
	</div>
	</div>';
	}
	if ($type == '3')
	{
		$html .= '<div style="clear:both;padding: 20px 20px 25px 20px;margin-bottom:20px;height:30px;">
<h1 style="float: left;margin-top:7px;margin-bottom:0px;">' . $title . '</h1>
<div style="float: right;"><a style="float:right;" class="button ' . $color . ' large" href="' . $url . '" target="' . $url . '" ><span style="color:white">' . $button . '</span></a>
</div>
</div>';
	}
	return $html;
}
add_shortcode('call_to_action', 'call_to_action');


///////////////////////////////////////
// Testimonial Shortcode
///////////////////////////////////////	

function testimonial_shortcode($atts)
{
	$defaults = apply_filters('testimonial_shortcode_args', array ('title' => '', 'num' => 5));
	extract(shortcode_atts($defaults, $atts));
    
	wpb_display_testimonials($title, $num);
}
add_shortcode('testimonial', 'testimonial_shortcode');

///////////////////////////////////////
// Boxes Shortcode
///////////////////////////////////////	

function boxes_shortcode($atts)
{
	$defaults = apply_filters('boxes_shortcode_args', array ('title' => '','type' => ''));
	extract(shortcode_atts($defaults, $atts));
	if ($type == '1')
	{
		$html .= '<div class="boxes" style="box-shadow: 1px 1px 3px 0 rgba(180, 180, 180, 0.2);border: 1px solid #dedede;background-color: #fcfcfc; ">
	<div style="width:100%"><span class="text">' . $title . '</span>
	</div></div>';
	}
	if ($type == '2')
	{
		$html .= '<div class="boxes" style="background-color: #f8f8f8;">
	<div style="width:100%"><span class="text">' . $title . '</span>
	</div></div>';
	}
	return $html;
}
add_shortcode('boxes', 'boxes_shortcode');

// Use shortcodes in text widgets.
add_filter('widget_text', 'do_shortcode');

///////////////////////////////////////
// Teaser Shortcode
///////////////////////////////////////	

function teaser_shortcode($atts, $content = null)
{
	$defaults = apply_filters('boxes_shortcode_args', array ('image' => '','type' => ''));
	extract(shortcode_atts($defaults, $atts));
	if ($type == '1')
	{
		$html .= '<div class="teaser" style="background-color:#f7f7f7;"><img class="teaser-image" src="'.$image.'"></img><div class="content">' . do_shortcode($content) . '</div>
	</div>';
	}
	if ($type == '2')
	{
		$html .= '<div class="teaser" style="box-shadow: 1px 1px 3px 0 rgba(180, 180, 180, 0.2);border: 1px solid #dedede;"><img class="teaser-image" src="'.$image.'"></img><div class="content">' . do_shortcode($content) . '</div>
	</div>';
	}
	return $html;
}
add_shortcode('teasers', 'teaser_shortcode');

///////////////////////////////////////
// Progress Bar Shortcode
///////////////////////////////////////	

function progress_bar_shortcode($atts, $content = null)
{
	$defaults = apply_filters('progress_bar_shortcode_args', array ('percentage' => '','title' => ''));
	extract(shortcode_atts($defaults, $atts));
	{
		$html .= '<div class="skill-title">'.$title.' '.$percentage.'</div>
		<div class="bar_wrap">
    <div class="skill-percentage" style="width: '.$percentage.';"></div>
</div>';
	}
	return $html;
}
add_shortcode('progress_bar', 'progress_bar_shortcode');


